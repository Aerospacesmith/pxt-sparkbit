{
  "SparkbitAngle.Degree|block": "degrees (°)",
  "SparkbitAngle.Percent|block": "percent (%)",
  "SparkbitColor.Green|block": "green",
  "SparkbitColor.Red|block": "red",
  "SparkbitDirection.Clockwise|block": "clockwise",
  "SparkbitDirection.Counterclockwise|block": "counterclockwise",
  "SparkbitInPort.Input1|block": "input 1",
  "SparkbitInPort.Input2|block": "input 2",
  "SparkbitInPort.Input3|block": "input 3",
  "SparkbitInPort.Input4|block": "input 4",
  "SparkbitInPort.Input5|block": "input 5",
  "SparkbitInPort.Input6|block": "input 6",
  "SparkbitInPort.Input7|block": "input 7",
  "SparkbitInPort.Input8|block": "input 8",
  "SparkbitLogic.EQ|block": "=",
  "SparkbitLogic.GTE|block": "≥",
  "SparkbitLogic.GT|block": ">",
  "SparkbitLogic.LTE|block": "≤",
  "SparkbitLogic.LT|block": "<",
  "SparkbitLogic.NEQ|block": "≠",
  "SparkbitOutPort.Output1|block": "output 1",
  "SparkbitOutPort.Output2|block": "output 2",
  "SparkbitOutPort.Output3|block": "output 3",
  "SparkbitOutPort.Output4|block": "output 4",
  "sparkbitI._EQ|block": "=",
  "sparkbitI._GTE|block": "≥",
  "sparkbitI._GT|block": ">",
  "sparkbitI._LTE|block": "≤",
  "sparkbitI._LT|block": "<",
  "sparkbitI._NEQ|block": "≠",
  "sparkbitI._input|block": "$input",
  "sparkbitI._sparkbitAngleDegree|block": "degrees (°)",
  "sparkbitI._sparkbitAngleEnum|block": "$operator",
  "sparkbitI._sparkbitAnglePercent|block": "percent (\\%)",
  "sparkbitI._sparkbitLogic_enum|block": "$operator",
  "sparkbitI.analogSensorPercent|block": "analog sensor $channel percent (\\%)",
  "sparkbitI.analogSensor|block": "analog sensor $channel 10 bit value",
  "sparkbitI.angleSensorCompareDegree|block": "angle sensor $channel $operator $value degrees (°)",
  "sparkbitI.angleSensorComparePercent|block": "angle sensor $channel $operator $value percent (\\%)",
  "sparkbitI.angleSensor|block": "angle sensor $channel $operator",
  "sparkbitI.bumpSensorIsPressed|block": "bump sensor $channel is pressed",
  "sparkbitI.irTransmitterIsReceived|block": "IR transmitter $TXpin is received on $RXpin",
  "sparkbitI.lightSensorComparePercent|block": "light sensor $channel $operator $value percent (\\%)",
  "sparkbitI.lightSensorPercent|block": "light sensor $channel percent (\\%)",
  "sparkbitI|block": "Spark:bit Inputs",
  "sparkbitO._output|block": "$output",
  "sparkbitO._sparkbitColorEnum|block": "$color",
  "sparkbitO._sparkbitDirectionEnum|block": "$direction",
  "sparkbitO.rotateMotorModuleVelocity|block": "rotate motor module $motor at velocity $velocity percent (\\%) || for $duration ms",
  "sparkbitO.rotateMotorModule|block": "rotate motor module $motor $direction at speed $speed percent (\\%) || for $duration ms",
  "sparkbitO.setLightModule|block": "set light module $output to $color at brightness $brightness percent (\\%) || for $duration ms",
  "sparkbitO.stopLightModule|block": "turn off light module $output",
  "sparkbitO.stopMotorModule|block": "stop motor module $motor",
  "sparkbitO|block": "Spark:bit Outputs",
  "{id:category}SparkbitI": "SparkbitI",
  "{id:category}SparkbitO": "SparkbitO",
  "{id:group}Angle Sensor (green)": "Angle Sensor (green)",
  "{id:group}Bump Sensor (blue)": "Bump Sensor (blue)",
  "{id:group}IR Tx/Rx (black/white or gray/white)": "IR Tx/Rx (black/white or gray/white)",
  "{id:group}Light Module (orange)": "Light Module (orange)",
  "{id:group}Light Sensor (yellow)": "Light Sensor (yellow)",
  "{id:group}Motor Module (red)": "Motor Module (red)"
}
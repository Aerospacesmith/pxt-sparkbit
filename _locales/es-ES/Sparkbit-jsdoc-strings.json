{
  "REG_INPUT_DISABLE_B": "Constants",
  "SparkbitColor": "Enumeration of LED Colors.",
  "SparkbitDirection": "Enumeration of directions.",
  "SparkbitInPort": "Enumeration of Inputs.",
  "SparkbitOutPort": "Enumeration of Outputs.",
  "outputsValue": "Functions to operate Output timers.",
  "setreg": "Internal functions",
  "sparkbitI": "Custom Blocks for Sparkbit Input functionality.",
  "sparkbitI._EQ": "Return true if both inputs equal each other.",
  "sparkbitI._GT": "Return true if the first input is greater than the second input.",
  "sparkbitI._GTE": "Return true if the first input is greater than or equal to the second input.",
  "sparkbitI._LT": "Return true if the first input is smaller than the second input.",
  "sparkbitI._LTE": "Return true if the first input is smaller than or equal to the second input.",
  "sparkbitI._NEQ": "Return true if both inputs are not equal to each other.",
  "sparkbitI._sparkbitAngleDegree": "Returns a number value of 0-359",
  "sparkbitI._sparkbitAnglePercent": "Returns a number value of 0-100",
  "sparkbitI.analogSensor": "Returns 10 bit analog value of sensor",
  "sparkbitI.analogSensorPercent": "Returns value of analog sensor in percentage",
  "sparkbitI.analogSensorPercent|param|channel": "Sensor Input (1-8) eg: 1",
  "sparkbitI.analogSensor|param|channel": "Sensor Input (1-8) eg: 1",
  "sparkbitI.angleSensor": "Returns value of angle sensor",
  "sparkbitI.angleSensorCompareDegree": "Compares Angle Degree to Value and returns Boolean",
  "sparkbitI.angleSensorCompareDegree|param|channel": "Sensor Input (1-8) eg: 1",
  "sparkbitI.angleSensorComparePercent": "Compares Angle Percent to Value and returns Boolean",
  "sparkbitI.angleSensorComparePercent|param|channel": "Sensor Input (1-8) eg: 1",
  "sparkbitI.angleSensor|param|channel": "Sensor Input (1-8) eg: 1",
  "sparkbitI.bumpSensorIsPressed": "Returns true if pressed, false if not pressed",
  "sparkbitI.bumpSensorIsPressed|param|channel": "Sensor Input (1-8) eg: 1",
  "sparkbitI.irTransmitterIsReceived": "Pulses IR Transmitter and checks if signal is reflected. Returns Boolean.",
  "sparkbitI.irTransmitterIsReceived|param|RXpin": "Sensor Input (1-8) eg: 2",
  "sparkbitI.irTransmitterIsReceived|param|TXpin": "Sensor Input (1-8) eg: 1",
  "sparkbitI.lightSensorComparePercent": "Compares Light Percent to Value and returns Boolean",
  "sparkbitI.lightSensorComparePercent|param|channel": "Sensor Input (1-8) eg: 1",
  "sparkbitI.lightSensorPercent": "Returns value of light sensor",
  "sparkbitI.lightSensorPercent|param|channel": "Sensor Input (1-8) eg: 1",
  "sparkbitO": "Custom Blocks for Sparkbit Output functionality.",
  "sparkbitO.rotateMotorModule": "Turns a motor module with direction, speed (0 to 100), and duration.",
  "sparkbitO.rotateMotorModuleVelocity": "Turns a motor module with velocity (-100 to 100), and duration.",
  "sparkbitO.rotateMotorModuleVelocity|param|motor": "Output (1-4) eg: 1",
  "sparkbitO.rotateMotorModule|param|motor": "Output (1-4) eg: 1",
  "sparkbitO.setLightModule": "Turns on the LED in the light module with color (Green or Red), brightness (0 to 100), and duration.",
  "sparkbitO.setLightModule|param|output": "Output (1-4) eg: 1",
  "sparkbitO.stopLightModule": "Turns off the LED in the light module.",
  "sparkbitO.stopLightModule|param|output": "Output (1-4) eg: 1",
  "sparkbitO.stopMotorModule": "Stops motor module.",
  "sparkbitO.stopMotorModule|param|motor": "Output (1-4) eg: 1"
}